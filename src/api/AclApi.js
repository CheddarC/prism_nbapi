/**
 * PRISM NBAPI
 * This is a PRISM NBAPI API Client module.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AclInfo', 'model/AclInfoData', 'model/ErrorMessage', 'model/ResData'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AclInfo'), require('../model/AclInfoData'), require('../model/ErrorMessage'), require('../model/ResData'));
  } else {
    // Browser globals (root is window)
    if (!root.PrismNbapi) {
      root.PrismNbapi = {};
    }
    root.PrismNbapi.AclApi = factory(root.PrismNbapi.ApiClient, root.PrismNbapi.AclInfo, root.PrismNbapi.AclInfoData, root.PrismNbapi.ErrorMessage, root.PrismNbapi.ResData);
  }
}(this, function(ApiClient, AclInfo, AclInfoData, ErrorMessage, ResData) {
  'use strict';

  /**
   * Acl service.
   * @module api/AclApi
   * @version 1.0.0
   */

  /**
   * Constructs a new AclApi. 
   * @alias module:api/AclApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createAclIpv4 operation.
     * @callback module:api/AclApi~createAclIpv4Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ResData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create ACL IPv4
     * @param {module:model/AclInfo} aclInfo ACL 정보.
     * @param {module:api/AclApi~createAclIpv4Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResData}
     */
    this.createAclIpv4 = function(aclInfo, callback) {
      var postBody = aclInfo;

      // verify the required parameter 'aclInfo' is set
      if (aclInfo === undefined || aclInfo === null) {
        throw new Error("Missing the required parameter 'aclInfo' when calling createAclIpv4");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResData;

      return this.apiClient.callApi(
        '/acl/ipv4', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAclIpv6 operation.
     * @callback module:api/AclApi~createAclIpv6Callback
     * @param {String} error Error message, if any.
     * @param {module:model/ResData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create ACL IPv6
     * @param {module:model/AclInfo} aclInfo ACL 정보.
     * @param {module:api/AclApi~createAclIpv6Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResData}
     */
    this.createAclIpv6 = function(aclInfo, callback) {
      var postBody = aclInfo;

      // verify the required parameter 'aclInfo' is set
      if (aclInfo === undefined || aclInfo === null) {
        throw new Error("Missing the required parameter 'aclInfo' when calling createAclIpv6");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResData;

      return this.apiClient.callApi(
        '/acl/ipv6', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAclIpv4 operation.
     * @callback module:api/AclApi~deleteAclIpv4Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete ACL IPv4
     * @param {String} aclNumber 삭제할 ACL entry number
     * @param {module:api/AclApi~deleteAclIpv4Callback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteAclIpv4 = function(aclNumber, callback) {
      var postBody = null;

      // verify the required parameter 'aclNumber' is set
      if (aclNumber === undefined || aclNumber === null) {
        throw new Error("Missing the required parameter 'aclNumber' when calling deleteAclIpv4");
      }


      var pathParams = {
        'acl_number': aclNumber
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/acl/ipv4/{acl_number}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAclIpv6 operation.
     * @callback module:api/AclApi~deleteAclIpv6Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete ACL IPv6
     * @param {String} aclNumber 삭제할 ACL entry number
     * @param {module:api/AclApi~deleteAclIpv6Callback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteAclIpv6 = function(aclNumber, callback) {
      var postBody = null;

      // verify the required parameter 'aclNumber' is set
      if (aclNumber === undefined || aclNumber === null) {
        throw new Error("Missing the required parameter 'aclNumber' when calling deleteAclIpv6");
      }


      var pathParams = {
        'acl_number': aclNumber
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/acl/ipv6/{acl_number}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAclIpv4Info operation.
     * @callback module:api/AclApi~getAclIpv4InfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AclInfoData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ACL IPv4 information
     * @param {String} aclNumber 정보를 가져올 ACL entry number. all 일 경우, 모든 ACL entry의 정보를 가져옴
     * @param {module:api/AclApi~getAclIpv4InfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AclInfoData}
     */
    this.getAclIpv4Info = function(aclNumber, callback) {
      var postBody = null;

      // verify the required parameter 'aclNumber' is set
      if (aclNumber === undefined || aclNumber === null) {
        throw new Error("Missing the required parameter 'aclNumber' when calling getAclIpv4Info");
      }


      var pathParams = {
        'acl_number': aclNumber
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AclInfoData;

      return this.apiClient.callApi(
        '/acl/ipv4/{acl_number}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAclIpv6Info operation.
     * @callback module:api/AclApi~getAclIpv6InfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AclInfoData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ACL IPv6 information
     * @param {String} aclNumber 정보를 가져올 ACL entry number. all 일 경우, 모든 ACL entry의 정보를 가져옴
     * @param {module:api/AclApi~getAclIpv6InfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AclInfoData}
     */
    this.getAclIpv6Info = function(aclNumber, callback) {
      var postBody = null;

      // verify the required parameter 'aclNumber' is set
      if (aclNumber === undefined || aclNumber === null) {
        throw new Error("Missing the required parameter 'aclNumber' when calling getAclIpv6Info");
      }


      var pathParams = {
        'acl_number': aclNumber
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AclInfoData;

      return this.apiClient.callApi(
        '/acl/ipv6/{acl_number}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
