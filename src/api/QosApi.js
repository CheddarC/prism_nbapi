/**
 * PRISM NBAPI
 * This is a PRISM NBAPI API Client module.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EntryInfo', 'model/ErrorMessage', 'model/QosEntryInfo', 'model/QosRuleInfo', 'model/ResData', 'model/RuleInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/EntryInfo'), require('../model/ErrorMessage'), require('../model/QosEntryInfo'), require('../model/QosRuleInfo'), require('../model/ResData'), require('../model/RuleInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.PrismNbapi) {
      root.PrismNbapi = {};
    }
    root.PrismNbapi.QosApi = factory(root.PrismNbapi.ApiClient, root.PrismNbapi.EntryInfo, root.PrismNbapi.ErrorMessage, root.PrismNbapi.QosEntryInfo, root.PrismNbapi.QosRuleInfo, root.PrismNbapi.ResData, root.PrismNbapi.RuleInfo);
  }
}(this, function(ApiClient, EntryInfo, ErrorMessage, QosEntryInfo, QosRuleInfo, ResData, RuleInfo) {
  'use strict';

  /**
   * Qos service.
   * @module api/QosApi
   * @version 1.0.0
   */

  /**
   * Constructs a new QosApi. 
   * @alias module:api/QosApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createQosEntry operation.
     * @callback module:api/QosApi~createQosEntryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create QoS entry
     * @param {module:model/QosEntryInfo} qosEntryInfo QoS Entry 정보.
     * @param {module:api/QosApi~createQosEntryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResData}
     */
    this.createQosEntry = function(qosEntryInfo, callback) {
      var postBody = qosEntryInfo;

      // verify the required parameter 'qosEntryInfo' is set
      if (qosEntryInfo === undefined || qosEntryInfo === null) {
        throw new Error("Missing the required parameter 'qosEntryInfo' when calling createQosEntry");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResData;

      return this.apiClient.callApi(
        '/qos/entry', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createQosRule operation.
     * @callback module:api/QosApi~createQosRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResData} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create QoS Rule
     * @param {module:model/QosRuleInfo} qosRuleInfo QoS Rule 정보.
     * @param {module:api/QosApi~createQosRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResData}
     */
    this.createQosRule = function(qosRuleInfo, callback) {
      var postBody = qosRuleInfo;

      // verify the required parameter 'qosRuleInfo' is set
      if (qosRuleInfo === undefined || qosRuleInfo === null) {
        throw new Error("Missing the required parameter 'qosRuleInfo' when calling createQosRule");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ResData;

      return this.apiClient.callApi(
        '/qos/rule', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteQosEntry operation.
     * @callback module:api/QosApi~deleteQosEntryCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete QoS Entry
     * @param {String} id 삭제하려는 QoS Entry ID
     * @param {module:api/QosApi~deleteQosEntryCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteQosEntry = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteQosEntry");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/qos/entry/{id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteQosRule operation.
     * @callback module:api/QosApi~deleteQosRuleCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete QoS Rule
     * @param {String} ruleId 삭제하려는 QoS Rule ID
     * @param {module:api/QosApi~deleteQosRuleCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteQosRule = function(ruleId, callback) {
      var postBody = null;

      // verify the required parameter 'ruleId' is set
      if (ruleId === undefined || ruleId === null) {
        throw new Error("Missing the required parameter 'ruleId' when calling deleteQosRule");
      }


      var pathParams = {
        'rule_id': ruleId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi(
        '/qos/rule/{rule_id}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getQosEntryInfo operation.
     * @callback module:api/QosApi~getQosEntryInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EntryInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get QoS Entry information
     * @param {String} id 정보를 가져올 QoS entry number. all 일 경우, 모든 QoS entry 정보를 가져옴
     * @param {module:api/QosApi~getQosEntryInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EntryInfo}
     */
    this.getQosEntryInfo = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getQosEntryInfo");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = EntryInfo;

      return this.apiClient.callApi(
        '/qos/entry/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getQosRuleInfo operation.
     * @callback module:api/QosApi~getQosRuleInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RuleInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get QoS Rule information
     * @param {String} ruleId 정보를 가져오고 싶은 QoS Rule ID. all 일 경우, 모든 QoS Rule 정보를 가져옴
     * @param {module:api/QosApi~getQosRuleInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RuleInfo}
     */
    this.getQosRuleInfo = function(ruleId, callback) {
      var postBody = null;

      // verify the required parameter 'ruleId' is set
      if (ruleId === undefined || ruleId === null) {
        throw new Error("Missing the required parameter 'ruleId' when calling getQosRuleInfo");
      }


      var pathParams = {
        'rule_id': ruleId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = RuleInfo;

      return this.apiClient.callApi(
        '/qos/rule/{rule_id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
