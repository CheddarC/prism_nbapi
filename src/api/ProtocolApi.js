/**
 * PRISM NBAPI
 * This is a PRISM NBAPI API Client module.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ConfRoutingProtocolInfo', 'model/ErrorMessage', 'model/RoutingObject', 'model/RoutingsObject'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ConfRoutingProtocolInfo'), require('../model/ErrorMessage'), require('../model/RoutingObject'), require('../model/RoutingsObject'));
  } else {
    // Browser globals (root is window)
    if (!root.PrismNbapi) {
      root.PrismNbapi = {};
    }
    root.PrismNbapi.ProtocolApi = factory(root.PrismNbapi.ApiClient, root.PrismNbapi.ConfRoutingProtocolInfo, root.PrismNbapi.ErrorMessage, root.PrismNbapi.RoutingObject, root.PrismNbapi.RoutingsObject);
  }
}(this, function(ApiClient, ConfRoutingProtocolInfo, ErrorMessage, RoutingObject, RoutingsObject) {
  'use strict';

  /**
   * Protocol service.
   * @module api/ProtocolApi
   * @version 1.0.0
   */

  /**
   * Constructs a new ProtocolApi. 
   * @alias module:api/ProtocolApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the confPrismRoutingProtocol operation.
     * @callback module:api/ProtocolApi~confPrismRoutingProtocolCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RoutingObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} tenantName 테넌트의 이름
     * @param {Object} opts Optional parameters
     * @param {module:model/ConfRoutingProtocolInfo} opts.confRoutingProtocolInfo 업데이트 할 정보
     * @param {module:api/ProtocolApi~confPrismRoutingProtocolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RoutingObject}
     */
    this.confPrismRoutingProtocol = function(tenantName, opts, callback) {
      opts = opts || {};
      var postBody = opts['confRoutingProtocolInfo'];

      // verify the required parameter 'tenantName' is set
      if (tenantName === undefined || tenantName === null) {
        throw new Error("Missing the required parameter 'tenantName' when calling confPrismRoutingProtocol");
      }


      var pathParams = {
        'tenant_name': tenantName
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = RoutingObject;

      return this.apiClient.callApi(
        '/prism/routing/{tenant_name}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllPrismRoutingProtocol operation.
     * @callback module:api/ProtocolApi~getAllPrismRoutingProtocolCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RoutingsObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {module:api/ProtocolApi~getAllPrismRoutingProtocolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RoutingsObject}
     */
    this.getAllPrismRoutingProtocol = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = RoutingsObject;

      return this.apiClient.callApi(
        '/prism/routing/all', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOnePrismRoutingProtocol operation.
     * @callback module:api/ProtocolApi~getOnePrismRoutingProtocolCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RoutingObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} tenantName 테넌트의 이름
     * @param {module:api/ProtocolApi~getOnePrismRoutingProtocolCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RoutingObject}
     */
    this.getOnePrismRoutingProtocol = function(tenantName, callback) {
      var postBody = null;

      // verify the required parameter 'tenantName' is set
      if (tenantName === undefined || tenantName === null) {
        throw new Error("Missing the required parameter 'tenantName' when calling getOnePrismRoutingProtocol");
      }


      var pathParams = {
        'tenant_name': tenantName
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = RoutingObject;

      return this.apiClient.callApi(
        '/prism/routing/{tenant_name}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
