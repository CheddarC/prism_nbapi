/**
 * PRISM NBAPI
 * This is a PRISM NBAPI API Client module.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AclEntry', 'model/AclEntryFlow', 'model/AclInfo', 'model/AclInfoData', 'model/AclInfoDataData', 'model/ConfRoutingProtocolInfo', 'model/DhcpInfo', 'model/DhcpInfoHosts', 'model/DhcpSvrInfo', 'model/DhcpSvrInfoHosts', 'model/DhcpUpdateInfo', 'model/EntryInfo', 'model/EntryInfoData', 'model/EntryInfoMeterBands', 'model/ErrorMessage', 'model/InterfaceBrief', 'model/InterfaceInfo', 'model/InterfaceInfoDetail', 'model/InterfaceName', 'model/InterfaceObject', 'model/InterfacesBriefObject', 'model/InterfacesObject', 'model/IntfStats', 'model/MulticastInfo', 'model/MulticastInfoBsrCandi', 'model/MulticastInfoPhyint', 'model/MulticastInfoRpAddr', 'model/MulticastInfoRpCandi', 'model/MulticastInfoRpCandiGroupPre', 'model/MulticastInfoSptThreshold', 'model/MulticastObject', 'model/PhysicalsObject', 'model/QosEntryInfo', 'model/QosRuleInfo', 'model/QosRuleInfoMeterBands', 'model/ResData', 'model/Result', 'model/RouterInterface', 'model/RouterInterfaceBrIntfs', 'model/RoutersObject', 'model/RoutingObject', 'model/RoutingProtocolInfo', 'model/RoutingProtocolInfoBgp', 'model/RoutingProtocolInfoOspf', 'model/RoutingProtocolInfoOspfArea', 'model/RoutingProtocolInfoOspfNeighbor', 'model/RoutingsObject', 'model/RuleInfo', 'model/SettingInfo', 'model/SettingInfoArea', 'model/SettingInfoIpv4Prefix', 'model/SettingInfoMatch', 'model/SettingInfoNeighbor', 'model/SettingInfoNetwork', 'model/SettingInfoRedistribute', 'model/SettingInfoRouteMap', 'model/TenantName', 'model/UpdateAddInfo', 'model/VrrpInfo', 'model/VrrpNameObject', 'model/VrrpObject', 'model/VrrpUpdateInfo', 'model/VrrpsObject', 'api/AclApi', 'api/DhcpApi', 'api/InterfaceApi', 'api/MulticastApi', 'api/ProtocolApi', 'api/QosApi', 'api/RouterApi', 'api/VrrpApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AclEntry'), require('./model/AclEntryFlow'), require('./model/AclInfo'), require('./model/AclInfoData'), require('./model/AclInfoDataData'), require('./model/ConfRoutingProtocolInfo'), require('./model/DhcpInfo'), require('./model/DhcpInfoHosts'), require('./model/DhcpSvrInfo'), require('./model/DhcpSvrInfoHosts'), require('./model/DhcpUpdateInfo'), require('./model/EntryInfo'), require('./model/EntryInfoData'), require('./model/EntryInfoMeterBands'), require('./model/ErrorMessage'), require('./model/InterfaceBrief'), require('./model/InterfaceInfo'), require('./model/InterfaceInfoDetail'), require('./model/InterfaceName'), require('./model/InterfaceObject'), require('./model/InterfacesBriefObject'), require('./model/InterfacesObject'), require('./model/IntfStats'), require('./model/MulticastInfo'), require('./model/MulticastInfoBsrCandi'), require('./model/MulticastInfoPhyint'), require('./model/MulticastInfoRpAddr'), require('./model/MulticastInfoRpCandi'), require('./model/MulticastInfoRpCandiGroupPre'), require('./model/MulticastInfoSptThreshold'), require('./model/MulticastObject'), require('./model/PhysicalsObject'), require('./model/QosEntryInfo'), require('./model/QosRuleInfo'), require('./model/QosRuleInfoMeterBands'), require('./model/ResData'), require('./model/Result'), require('./model/RouterInterface'), require('./model/RouterInterfaceBrIntfs'), require('./model/RoutersObject'), require('./model/RoutingObject'), require('./model/RoutingProtocolInfo'), require('./model/RoutingProtocolInfoBgp'), require('./model/RoutingProtocolInfoOspf'), require('./model/RoutingProtocolInfoOspfArea'), require('./model/RoutingProtocolInfoOspfNeighbor'), require('./model/RoutingsObject'), require('./model/RuleInfo'), require('./model/SettingInfo'), require('./model/SettingInfoArea'), require('./model/SettingInfoIpv4Prefix'), require('./model/SettingInfoMatch'), require('./model/SettingInfoNeighbor'), require('./model/SettingInfoNetwork'), require('./model/SettingInfoRedistribute'), require('./model/SettingInfoRouteMap'), require('./model/TenantName'), require('./model/UpdateAddInfo'), require('./model/VrrpInfo'), require('./model/VrrpNameObject'), require('./model/VrrpObject'), require('./model/VrrpUpdateInfo'), require('./model/VrrpsObject'), require('./api/AclApi'), require('./api/DhcpApi'), require('./api/InterfaceApi'), require('./api/MulticastApi'), require('./api/ProtocolApi'), require('./api/QosApi'), require('./api/RouterApi'), require('./api/VrrpApi'));
  }
}(function(ApiClient, AclEntry, AclEntryFlow, AclInfo, AclInfoData, AclInfoDataData, ConfRoutingProtocolInfo, DhcpInfo, DhcpInfoHosts, DhcpSvrInfo, DhcpSvrInfoHosts, DhcpUpdateInfo, EntryInfo, EntryInfoData, EntryInfoMeterBands, ErrorMessage, InterfaceBrief, InterfaceInfo, InterfaceInfoDetail, InterfaceName, InterfaceObject, InterfacesBriefObject, InterfacesObject, IntfStats, MulticastInfo, MulticastInfoBsrCandi, MulticastInfoPhyint, MulticastInfoRpAddr, MulticastInfoRpCandi, MulticastInfoRpCandiGroupPre, MulticastInfoSptThreshold, MulticastObject, PhysicalsObject, QosEntryInfo, QosRuleInfo, QosRuleInfoMeterBands, ResData, Result, RouterInterface, RouterInterfaceBrIntfs, RoutersObject, RoutingObject, RoutingProtocolInfo, RoutingProtocolInfoBgp, RoutingProtocolInfoOspf, RoutingProtocolInfoOspfArea, RoutingProtocolInfoOspfNeighbor, RoutingsObject, RuleInfo, SettingInfo, SettingInfoArea, SettingInfoIpv4Prefix, SettingInfoMatch, SettingInfoNeighbor, SettingInfoNetwork, SettingInfoRedistribute, SettingInfoRouteMap, TenantName, UpdateAddInfo, VrrpInfo, VrrpNameObject, VrrpObject, VrrpUpdateInfo, VrrpsObject, AclApi, DhcpApi, InterfaceApi, MulticastApi, ProtocolApi, QosApi, RouterApi, VrrpApi) {
  'use strict';

  /**
   * This_is_a_PRISM_NBAPI_API_Client_module_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var PrismNbapi = require('index'); // See note below*.
   * var xxxSvc = new PrismNbapi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new PrismNbapi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new PrismNbapi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new PrismNbapi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AclEntry model constructor.
     * @property {module:model/AclEntry}
     */
    AclEntry: AclEntry,
    /**
     * The AclEntryFlow model constructor.
     * @property {module:model/AclEntryFlow}
     */
    AclEntryFlow: AclEntryFlow,
    /**
     * The AclInfo model constructor.
     * @property {module:model/AclInfo}
     */
    AclInfo: AclInfo,
    /**
     * The AclInfoData model constructor.
     * @property {module:model/AclInfoData}
     */
    AclInfoData: AclInfoData,
    /**
     * The AclInfoDataData model constructor.
     * @property {module:model/AclInfoDataData}
     */
    AclInfoDataData: AclInfoDataData,
    /**
     * The ConfRoutingProtocolInfo model constructor.
     * @property {module:model/ConfRoutingProtocolInfo}
     */
    ConfRoutingProtocolInfo: ConfRoutingProtocolInfo,
    /**
     * The DhcpInfo model constructor.
     * @property {module:model/DhcpInfo}
     */
    DhcpInfo: DhcpInfo,
    /**
     * The DhcpInfoHosts model constructor.
     * @property {module:model/DhcpInfoHosts}
     */
    DhcpInfoHosts: DhcpInfoHosts,
    /**
     * The DhcpSvrInfo model constructor.
     * @property {module:model/DhcpSvrInfo}
     */
    DhcpSvrInfo: DhcpSvrInfo,
    /**
     * The DhcpSvrInfoHosts model constructor.
     * @property {module:model/DhcpSvrInfoHosts}
     */
    DhcpSvrInfoHosts: DhcpSvrInfoHosts,
    /**
     * The DhcpUpdateInfo model constructor.
     * @property {module:model/DhcpUpdateInfo}
     */
    DhcpUpdateInfo: DhcpUpdateInfo,
    /**
     * The EntryInfo model constructor.
     * @property {module:model/EntryInfo}
     */
    EntryInfo: EntryInfo,
    /**
     * The EntryInfoData model constructor.
     * @property {module:model/EntryInfoData}
     */
    EntryInfoData: EntryInfoData,
    /**
     * The EntryInfoMeterBands model constructor.
     * @property {module:model/EntryInfoMeterBands}
     */
    EntryInfoMeterBands: EntryInfoMeterBands,
    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage: ErrorMessage,
    /**
     * The InterfaceBrief model constructor.
     * @property {module:model/InterfaceBrief}
     */
    InterfaceBrief: InterfaceBrief,
    /**
     * The InterfaceInfo model constructor.
     * @property {module:model/InterfaceInfo}
     */
    InterfaceInfo: InterfaceInfo,
    /**
     * The InterfaceInfoDetail model constructor.
     * @property {module:model/InterfaceInfoDetail}
     */
    InterfaceInfoDetail: InterfaceInfoDetail,
    /**
     * The InterfaceName model constructor.
     * @property {module:model/InterfaceName}
     */
    InterfaceName: InterfaceName,
    /**
     * The InterfaceObject model constructor.
     * @property {module:model/InterfaceObject}
     */
    InterfaceObject: InterfaceObject,
    /**
     * The InterfacesBriefObject model constructor.
     * @property {module:model/InterfacesBriefObject}
     */
    InterfacesBriefObject: InterfacesBriefObject,
    /**
     * The InterfacesObject model constructor.
     * @property {module:model/InterfacesObject}
     */
    InterfacesObject: InterfacesObject,
    /**
     * The IntfStats model constructor.
     * @property {module:model/IntfStats}
     */
    IntfStats: IntfStats,
    /**
     * The MulticastInfo model constructor.
     * @property {module:model/MulticastInfo}
     */
    MulticastInfo: MulticastInfo,
    /**
     * The MulticastInfoBsrCandi model constructor.
     * @property {module:model/MulticastInfoBsrCandi}
     */
    MulticastInfoBsrCandi: MulticastInfoBsrCandi,
    /**
     * The MulticastInfoPhyint model constructor.
     * @property {module:model/MulticastInfoPhyint}
     */
    MulticastInfoPhyint: MulticastInfoPhyint,
    /**
     * The MulticastInfoRpAddr model constructor.
     * @property {module:model/MulticastInfoRpAddr}
     */
    MulticastInfoRpAddr: MulticastInfoRpAddr,
    /**
     * The MulticastInfoRpCandi model constructor.
     * @property {module:model/MulticastInfoRpCandi}
     */
    MulticastInfoRpCandi: MulticastInfoRpCandi,
    /**
     * The MulticastInfoRpCandiGroupPre model constructor.
     * @property {module:model/MulticastInfoRpCandiGroupPre}
     */
    MulticastInfoRpCandiGroupPre: MulticastInfoRpCandiGroupPre,
    /**
     * The MulticastInfoSptThreshold model constructor.
     * @property {module:model/MulticastInfoSptThreshold}
     */
    MulticastInfoSptThreshold: MulticastInfoSptThreshold,
    /**
     * The MulticastObject model constructor.
     * @property {module:model/MulticastObject}
     */
    MulticastObject: MulticastObject,
    /**
     * The PhysicalsObject model constructor.
     * @property {module:model/PhysicalsObject}
     */
    PhysicalsObject: PhysicalsObject,
    /**
     * The QosEntryInfo model constructor.
     * @property {module:model/QosEntryInfo}
     */
    QosEntryInfo: QosEntryInfo,
    /**
     * The QosRuleInfo model constructor.
     * @property {module:model/QosRuleInfo}
     */
    QosRuleInfo: QosRuleInfo,
    /**
     * The QosRuleInfoMeterBands model constructor.
     * @property {module:model/QosRuleInfoMeterBands}
     */
    QosRuleInfoMeterBands: QosRuleInfoMeterBands,
    /**
     * The ResData model constructor.
     * @property {module:model/ResData}
     */
    ResData: ResData,
    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result: Result,
    /**
     * The RouterInterface model constructor.
     * @property {module:model/RouterInterface}
     */
    RouterInterface: RouterInterface,
    /**
     * The RouterInterfaceBrIntfs model constructor.
     * @property {module:model/RouterInterfaceBrIntfs}
     */
    RouterInterfaceBrIntfs: RouterInterfaceBrIntfs,
    /**
     * The RoutersObject model constructor.
     * @property {module:model/RoutersObject}
     */
    RoutersObject: RoutersObject,
    /**
     * The RoutingObject model constructor.
     * @property {module:model/RoutingObject}
     */
    RoutingObject: RoutingObject,
    /**
     * The RoutingProtocolInfo model constructor.
     * @property {module:model/RoutingProtocolInfo}
     */
    RoutingProtocolInfo: RoutingProtocolInfo,
    /**
     * The RoutingProtocolInfoBgp model constructor.
     * @property {module:model/RoutingProtocolInfoBgp}
     */
    RoutingProtocolInfoBgp: RoutingProtocolInfoBgp,
    /**
     * The RoutingProtocolInfoOspf model constructor.
     * @property {module:model/RoutingProtocolInfoOspf}
     */
    RoutingProtocolInfoOspf: RoutingProtocolInfoOspf,
    /**
     * The RoutingProtocolInfoOspfArea model constructor.
     * @property {module:model/RoutingProtocolInfoOspfArea}
     */
    RoutingProtocolInfoOspfArea: RoutingProtocolInfoOspfArea,
    /**
     * The RoutingProtocolInfoOspfNeighbor model constructor.
     * @property {module:model/RoutingProtocolInfoOspfNeighbor}
     */
    RoutingProtocolInfoOspfNeighbor: RoutingProtocolInfoOspfNeighbor,
    /**
     * The RoutingsObject model constructor.
     * @property {module:model/RoutingsObject}
     */
    RoutingsObject: RoutingsObject,
    /**
     * The RuleInfo model constructor.
     * @property {module:model/RuleInfo}
     */
    RuleInfo: RuleInfo,
    /**
     * The SettingInfo model constructor.
     * @property {module:model/SettingInfo}
     */
    SettingInfo: SettingInfo,
    /**
     * The SettingInfoArea model constructor.
     * @property {module:model/SettingInfoArea}
     */
    SettingInfoArea: SettingInfoArea,
    /**
     * The SettingInfoIpv4Prefix model constructor.
     * @property {module:model/SettingInfoIpv4Prefix}
     */
    SettingInfoIpv4Prefix: SettingInfoIpv4Prefix,
    /**
     * The SettingInfoMatch model constructor.
     * @property {module:model/SettingInfoMatch}
     */
    SettingInfoMatch: SettingInfoMatch,
    /**
     * The SettingInfoNeighbor model constructor.
     * @property {module:model/SettingInfoNeighbor}
     */
    SettingInfoNeighbor: SettingInfoNeighbor,
    /**
     * The SettingInfoNetwork model constructor.
     * @property {module:model/SettingInfoNetwork}
     */
    SettingInfoNetwork: SettingInfoNetwork,
    /**
     * The SettingInfoRedistribute model constructor.
     * @property {module:model/SettingInfoRedistribute}
     */
    SettingInfoRedistribute: SettingInfoRedistribute,
    /**
     * The SettingInfoRouteMap model constructor.
     * @property {module:model/SettingInfoRouteMap}
     */
    SettingInfoRouteMap: SettingInfoRouteMap,
    /**
     * The TenantName model constructor.
     * @property {module:model/TenantName}
     */
    TenantName: TenantName,
    /**
     * The UpdateAddInfo model constructor.
     * @property {module:model/UpdateAddInfo}
     */
    UpdateAddInfo: UpdateAddInfo,
    /**
     * The VrrpInfo model constructor.
     * @property {module:model/VrrpInfo}
     */
    VrrpInfo: VrrpInfo,
    /**
     * The VrrpNameObject model constructor.
     * @property {module:model/VrrpNameObject}
     */
    VrrpNameObject: VrrpNameObject,
    /**
     * The VrrpObject model constructor.
     * @property {module:model/VrrpObject}
     */
    VrrpObject: VrrpObject,
    /**
     * The VrrpUpdateInfo model constructor.
     * @property {module:model/VrrpUpdateInfo}
     */
    VrrpUpdateInfo: VrrpUpdateInfo,
    /**
     * The VrrpsObject model constructor.
     * @property {module:model/VrrpsObject}
     */
    VrrpsObject: VrrpsObject,
    /**
     * The AclApi service constructor.
     * @property {module:api/AclApi}
     */
    AclApi: AclApi,
    /**
     * The DhcpApi service constructor.
     * @property {module:api/DhcpApi}
     */
    DhcpApi: DhcpApi,
    /**
     * The InterfaceApi service constructor.
     * @property {module:api/InterfaceApi}
     */
    InterfaceApi: InterfaceApi,
    /**
     * The MulticastApi service constructor.
     * @property {module:api/MulticastApi}
     */
    MulticastApi: MulticastApi,
    /**
     * The ProtocolApi service constructor.
     * @property {module:api/ProtocolApi}
     */
    ProtocolApi: ProtocolApi,
    /**
     * The QosApi service constructor.
     * @property {module:api/QosApi}
     */
    QosApi: QosApi,
    /**
     * The RouterApi service constructor.
     * @property {module:api/RouterApi}
     */
    RouterApi: RouterApi,
    /**
     * The VrrpApi service constructor.
     * @property {module:api/VrrpApi}
     */
    VrrpApi: VrrpApi
  };

  return exports;
}));
