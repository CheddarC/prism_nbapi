/**
 * PRISM NBAPI
 * This is a PRISM NBAPI API Client module.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PrismNbapi);
  }
}(this, function(expect, PrismNbapi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PrismNbapi.VrrpUpdateInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VrrpUpdateInfo', function() {
    it('should create an instance of VrrpUpdateInfo', function() {
      // uncomment below and update the code to test VrrpUpdateInfo
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be.a(PrismNbapi.VrrpUpdateInfo);
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property _interface (base name: "interface")', function() {
      // uncomment below and update the code to test the property _interface
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property vrId (base name: "vr_id")', function() {
      // uncomment below and update the code to test the property vrId
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property advertInt (base name: "advert_int")', function() {
      // uncomment below and update the code to test the property advertInt
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property authType (base name: "auth_type")', function() {
      // uncomment below and update the code to test the property authType
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property authPass (base name: "auth_pass")', function() {
      // uncomment below and update the code to test the property authPass
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property vips (base name: "vips")', function() {
      // uncomment below and update the code to test the property vips
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property notifyMaster (base name: "notify_master")', function() {
      // uncomment below and update the code to test the property notifyMaster
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property notifyBackup (base name: "notify_backup")', function() {
      // uncomment below and update the code to test the property notifyBackup
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

    it('should have the property notifyFault (base name: "notify_fault")', function() {
      // uncomment below and update the code to test the property notifyFault
      //var instane = new PrismNbapi.VrrpUpdateInfo();
      //expect(instance).to.be();
    });

  });

}));
